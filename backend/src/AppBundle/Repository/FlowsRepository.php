<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * FlowsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FlowsRepository extends EntityRepository
{
    /**
     * @param $page_id
     * @param array $params
     * @return mixed
     */
    public function getFlowsByPageId($page_id, array $params=[]){
        $query = $this->createQueryBuilder('f')
            ->select('f')
            ->where("f.page_id = :pageID")
            ->setParameter('pageID', $page_id)
            ->andWhere('f.type <> 8');

        if(isset($params['search']) && !empty($params['search'])){
            $query->andWhere('f.name LIKE :name')
                ->setParameter("name", '%'.$params['search'].'%');
        }

        if(isset($params['status']) && ($params['status'] == 'false'|| $params['status'] == false)){
            $query->andWhere('f.status = :status')
                ->setParameter("status", false);
        }
        else{
            $query->andWhere('f.status = :status')
                ->setParameter("status", true);
        }

        if(isset($params['modified']) && !empty($params['modified']) && $params['modified'] == 'ASC'){
            $query->orderBy('f.modified','ASC');
        }
        else{
            $query->orderBy('f.modified','DESC');
        }

        return $query->getQuery()->getResult();
    }

    /**
     * @param $userID
     * @return int
     */
    public function countAllByUserId($userID){
        $result = $this->createQueryBuilder('f')
            ->from("AppBundle:Page", 'p')
            ->select('count(f) as flows')
            ->where('p.user = :userID')
            ->setParameter('userID', $userID)
            ->andWhere('f.page_id = p.page_id')
            ->getQuery()->getResult();


        return (isset($result[0]['flows']) && intval($result[0]['flows'])>0) ? intval($result[0]['flows']) : 0;
    }
}
