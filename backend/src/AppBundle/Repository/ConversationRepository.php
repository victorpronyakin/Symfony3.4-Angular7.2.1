<?php

namespace AppBundle\Repository;

/**
 * ConversationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConversationRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $pageID
     * @param array $params
     * @return array
     * @throws \Doctrine\DBAL\DBALException
     */
    public function getAllByPageID($pageID, $params=[]){
        $status = 1;
        if(isset($params['status'])){
            if ($params['status'] == "false" || $params['status'] == false){
                $status = 0;
            }
        }
        $sort = "DESC";
        if(isset($params['_sort']) && $params['_sort'] == 'asc'){
            $sort = "ASC";
        }

        $sql = "SELECT DISTINCT(c.id), c.page_id, s.subscriber_id, s.first_name as firstName, s.last_name as lastName, s.avatar, cm1.items as message, cm1.created, c.status
                FROM conversation c, subscribers s, conversation_messages cm1 
                LEFT JOIN conversation_messages cm2
                  ON (cm1.conversation_id = cm2.conversation_id AND cm1.created < cm2.created)
                WHERE cm2.id IS NULL 
                  AND c.page_id = ".$pageID." 
                  AND cm1.conversation_id = c.id 
                  AND c.status = ".$status." 
                  AND cm1.type = 1
                  AND c.subscriber_id = s.id
                ORDER BY cm1.created ".$sort;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }

    /**
     * @param $pageID
     * @param $status
     * @return mixed
     */
    public function changeAllStatusByPageID($pageID, $status){
        return $this->createQueryBuilder('c')
            ->update()
            ->set('c.status', ':status')
            ->setParameter('status', $status)
            ->where("c.page_id = :pageID")
            ->setParameter('pageID', $pageID)
            ->getQuery()->getResult();

    }
}
