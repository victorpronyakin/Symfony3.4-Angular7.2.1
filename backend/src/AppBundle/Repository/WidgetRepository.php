<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * WidgetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WidgetRepository extends EntityRepository
{
    /**
     * @param $page_id
     * @param array $params
     * @return mixed
     */
    public function getWidgetsByPageId($page_id, array $params=[]){
        $query = $this->createQueryBuilder('w')
            ->select('w')
            ->where("w.page_id = :pageID")
            ->setParameter('pageID', $page_id)
            ->orderBy('w.id','DESC');

        if(isset($params['search']) && !empty($params['search'])){
            $query->andWhere('w.name LIKE :search')
                ->setParameter('search', '%'.$params['search'].'%');
        }

        if(isset($params['type']) && !empty($params['type'])){
            $query->andWhere('w.type = :type')
                ->setParameter('type', $params['type']);
        }

        return $query->getQuery()->getResult();
    }

    /**
     * @param $userID
     * @return int
     */
    public function countAllByUserId($userID){
        $result = $this->createQueryBuilder('w')
            ->from("AppBundle:Page", 'p')
            ->select('count(w) as widgets')
            ->where('p.user = :userID')
            ->setParameter('userID', $userID)
            ->andWhere('w.page_id = p.page_id')
            ->getQuery()->getResult();


        return (isset($result[0]['widgets']) && intval($result[0]['widgets'])>0) ? intval($result[0]['widgets']) : 0;
    }
}
